"""

OVT = Operation Validation Tool, it’s the system to be tested
OF = Operation File
OVT can be provided 1 or 2 OF’s
PTD file = Patient Treatment Definition file (specifies a part of treatment)
An OF contains several fields, such as the Beam Delivered Meterset
A PTD file contains several fields, such as the Beam Specified Meterset
MI is an arbitrary unit to measure a delivered dose

Background:
The SUT is a software called “OVT”, whose purpose is to validate the content of 1 or 2 OF.
The OF are generated by our medical device during a clinical treatment, it gives information on how it went,
how the beam has been delivered.
Our device receives the specifications of the treatment in a file called PTD.
The corresponding PTD is also available by OVT, so it can compare the specification and the actual delivery.
The elements in the OF are structures with several fields and their values, like an XML or a JSON

Requirement 2:
When the user selected the option “Pplus cyclotron”:
•
In the situation of the validation of a single OF, the OVT shall validate that Beam Delivered
Meterset is within the following tolerances:
+/- 0.5 % or +/- 0.5 MI (whichever the greater) of the value specified in the PTD file.
•
In the situation of the validation of 2 OF, the OVT shall validate that the sum of Beam
Delivered Meterset of each OF is within the following tolerances:
+/- 0.5 % or +/- 0.5 MI (whichever the greater) of the value specified in the PTD file.


"""
"""
Scenario 1. Select whether to perform the Pplus Cyclotron
Given: The user selects the option “Pplus cyclotron”
OR: The user selects the option “Pplus cyclotron”
Then: The “Pplus cyclotron” is eiher started or not
"""
def select_pplus_cyclotron():
    pplus_cyclotron = input("Do you want to perform Pplus cyclotron? \n Choose Yes or No. \n")
    if pplus_cyclotron == "Yes":
        of_amount()
    else:
        print("We do not want to perform Pplus cyclotron \n")
"""
Scanrio 2: Determine how many OF's will be validated
Given: The number of OF's to be validated
When: The number is either 1 or 2
Then: A OVT test for a single or double amount can be performed
"""
def of_amount():
    of_amount = input("How many OF will be validated? Choose 1 or 2.\n")
    if int(of_amount) == 1:
        OVT_single_OF_amount()
    elif int(of_amount) == 2:
        OVT_double_OF_amount()
    elif int(of_amount)>2:
        print("There are too many OF values \n")
    else:
        print("Provide a valid amount of OF samples. \n")
"""
Scenario 3: 
Given: A single OF amount.
When: The user will provide:
 a) a value specified in a single PTD file.
 b) the BeamDeliveredMeterset value.
Then: The OVT checks that the Beam Delivered Meterset is within the following tolerances:
+/- 0.5 % or +/- 0.5 MI (whichever is the greater) of the value specified in the PTD file.
"""
def OVT_single_OF_amount():
    PTDfileAmount = input("Provide the Meterset value specified in the PTD file. \n")
    BeamDeliveredMeterset = input("Provide the Beam Delivered Meterset. \n")
    PTDfileAmountPercentValue = float("0.5%".replace('%', 'e-2'))
    PTDfileAmountPercentAmount = PTDfileAmountPercentValue*float(PTDfileAmount)
    PTDfileAmountMI = 0.5*float(PTDfileAmount)
    if PTDfileAmountPercentAmount<=float(BeamDeliveredMeterset) or PTDfileAmountMI<=float(BeamDeliveredMeterset):
        print(BeamDeliveredMeterset)
    else :
        print("The value is outside of the tolreances of the value specified in the PTD file.")
"""
Scenario 4: 
Given: A double OF amount. 
When: The user will provide:
 a) a value specified in a single PTD file.
 b) the first Beam Delivered Meterset value.
 c) the second Beam Delivered Meterset value.
Then: OVT shall validate that the sum of Beam Delivered Meterset of each OF is within 
the following tolerances:
+/- 0.5 % or +/- 0.5 MI (whichever the greater) of the value specified in the PTD file.
"""
def OVT_double_OF_amount():
    PTDfileAmount = input("Provide the Meterset value specified in the PTD file. \n")
    BeamDeliveredMeterset = input("Provide the first Beam Delivered Meterset. \n")
    SecondBeamDeliveredMeterset = input("Provide the second Beam Delivered Meterset. \n")
    SumOfBeamDeliveredMetersets = float(BeamDeliveredMeterset)+float(SecondBeamDeliveredMeterset)
    PTDfileAmountPercentValue = float("0.5%".replace('%', 'e-2'))
    PTDfileAmountPercentAmount = PTDfileAmountPercentValue*float(PTDfileAmount)
    PTDfileAmountMI = 0.5*float(PTDfileAmount)
    if PTDfileAmountPercentAmount<=float(SumOfBeamDeliveredMetersets) or PTDfileAmountMI<=float(SumOfBeamDeliveredMetersets):
        print(SumOfBeamDeliveredMetersets)
    else :
        print("The value is outside of the tolerances of the value specified in the PTD file.")